/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package snake;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.KeyEvent;

/**
 *
 * @author Raul
 */
public class SnakePanel extends javax.swing.JPanel {

    /**
     * Creates new form SnakePanle
     */
    private Snake snake;
    private final int TAM_CASILLA = 20;
    private boolean movimiento = true;

    public SnakePanel() {
        initComponents();
    }

    public void setSnake(Snake snake) {
        this.snake = snake;
    }

    public boolean isMovimiento() {
        return movimiento;
    }

    public void setMovimiento(boolean movimiento) {
        this.movimiento = movimiento;
    }
    
    @Override
    public void paint(Graphics graphics) {
        super.paint(graphics);
        if (snake != null) {
            for (int f = 0; f < snake.getTamFila(); f++) {
                for (int c = 0; c < snake.getTamCol(); c++) {
                    char contenido = snake.getTablero()[f][c];

                    //Lo que pintara en cada caso de lo que haya en casa casilla del tableo
                    switch (contenido) {
                        case Snake.VACIO:
                            break;
                        case Snake.CABEZA:
                            graphics.setColor(new Color(85, 107, 47));
                            graphics.fillOval(c * TAM_CASILLA, f * TAM_CASILLA, TAM_CASILLA, TAM_CASILLA);
                            graphics.setColor(new Color(0, 0, 0));
                            if (snake.getSentidoMov() == Snake.ARRIBA || snake.getSentidoMov() == Snake.ABAJO) {
                                graphics.fillOval(c * TAM_CASILLA + 5, f * TAM_CASILLA + 8, TAM_CASILLA - 16, TAM_CASILLA - 16);
                                graphics.fillOval(c * TAM_CASILLA + 12, f * TAM_CASILLA + 8, TAM_CASILLA - 16, TAM_CASILLA - 16);
                            }
                            if (snake.getSentidoMov() == Snake.DERECHA || snake.getSentidoMov() == Snake.IZQUIERDA) {
                                graphics.fillOval(c * TAM_CASILLA + 8, f * TAM_CASILLA + 5, TAM_CASILLA - 16, TAM_CASILLA - 16);
                                graphics.fillOval(c * TAM_CASILLA + 8, f * TAM_CASILLA + 12, TAM_CASILLA - 16, TAM_CASILLA - 16);
                            }
                            break;
                        case Snake.CUERPO:
                            graphics.setColor(new Color(107, 142, 35));
                            graphics.fillOval(c * TAM_CASILLA + 2, f * TAM_CASILLA + 2, TAM_CASILLA - 4, TAM_CASILLA - 4);
                            break;
                        case Snake.MURO:
                            graphics.setColor(new Color(0, 0, 0));
                            graphics.fillRect(c * TAM_CASILLA, f * TAM_CASILLA, TAM_CASILLA, TAM_CASILLA);
                            break;
                        case Snake.FRUTA:
                            graphics.setColor(new Color(255, 0, 0));
                            graphics.fillOval(c * TAM_CASILLA + 4, f * TAM_CASILLA + 4, TAM_CASILLA - 8, TAM_CASILLA - 8);
                            break;
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (movimiento) {
            movimiento = false;
            switch (evt.getKeyCode()) {
                case KeyEvent.VK_RIGHT:
                    if (snake.getSentidoMov() != Snake.IZQUIERDA) {
                        snake.setSentidoMov(Snake.DERECHA);
                    }
                    break;
                case KeyEvent.VK_LEFT:
                    if (snake.getSentidoMov() != Snake.DERECHA) {
                        snake.setSentidoMov(Snake.IZQUIERDA);
                    }
                    break;
                case KeyEvent.VK_UP:
                    if (snake.getSentidoMov() != Snake.ABAJO) {
                        snake.setSentidoMov(Snake.ARRIBA);
                    }
                    break;
                case KeyEvent.VK_DOWN:
                    if (snake.getSentidoMov() != Snake.ARRIBA) {
                        snake.setSentidoMov(Snake.ABAJO);
                    }
                    break;
            }
        }
    }//GEN-LAST:event_formKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
